parameters:
    duplicate.host.class: ACS\ACSPanelBundle\Validator\Constraints\DuplicateHostValidator
    domain.tools.class: ACS\ACSPanelBundle\Modules\Domain

services:
    duplicate.host:
        class: %duplicate.host.class%
        arguments: ['@doctrine.orm.entity_manager']
        tags:
            - {name: validator.constraint_validator, alias: duplicate.host}
    domain.tools:
        class: %domain.tools.class%
        tags:
            - {name: domain.tools, alias: domain.tools}
    #userlog.system:
        #class: ACS\ACSPanelBundle\Modules\LogHandler
        #arguments: ['@service_container']
        #tags:
            #- { name: log_handler }
    logger.action_listener:
        class: ACS\ACSPanelBundle\Listener\LoggerListener
        arguments: ['@service_container', '@kernel']
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
            - { name: kernel.event_listener, event: kernel.response , method: onKernelResponse}
    server.actions:
        class: ACS\ACSPanelBundle\Modules\ServerActions
        arguments: ['@doctrine.orm.entity_manager', '@service_container']


    acs.form.registerHosting:
        class: ACS\ACSPanelBundle\Form\RegisterHostingType
        tags:
            - { name: form.type, alias: registerHosting }

    acs.form.flow.registerHosting:
        class: ACS\ACSPanelBundle\Form\RegisterHostingFlow
        parent: craue.form.flow
        scope: request
        calls:
            - [ setFormType, ['@acs.form.registerHosting'] ]

    # Menu items added with event listener
    base_menu_subscriber:
        class: ACS\ACSPanelBundle\Event\MenuSubscriber
        arguments: ['@event_dispatcher']
        tags:
            - {name: kernel.event_subscriber}

    # DNSDomain events
    dns_subscriber:
        class: ACS\ACSPanelBundle\Event\DnsSubscriber
        arguments: ['@event_dispatcher']
        tags:
            - {name: kernel.event_subscriber}
